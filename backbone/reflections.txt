?How did you feel about the Getting Started-backbone intro?
	-Seems ok
	-It strikes me as a little minimalist, but in their eyes, that's a good thing
	-some of the language I don't quite get yet, but that's not a huge deal "atomic bla bla bla"'
	-I'm glad that we got to work with knockout first to see how another type of library handles the MVMM model
	-I'm excited to get started since the backbone.js example in the JSdesign course was the easiest for me to jump into

?What did you learn from making your first Backbone App?
	-There are all sorts of crazy methods going on
	-you need to call get to get a value
	-call set to set it
	-$el is a reference to the dom elements of the view
	-there are lots of different separate pieces
	-This use of Model seems more in line with what Eric was mentioning

	-Service Model--> Kind of like a constructor function
		-contains data and also a nice helper function to toggle checked
	-ServiceList Collection--> like an observable array
		-model property declares what it's a collection of?
		-function getChecked returns array of checked services
		-uses 'where'

	-Then create a new Collection of new Services

	-ServiceView View --> The ViewModel
		declare tagname?
		events: on this do this
		initialize: sets up listening by this.listenTo
		listenTo (this.model, change, this.render)

		render: sets html using $el
	-App View --> Like the Mother of the Views
		-first set "el", which is where it lives
		-initialize selectors
		-sets up Listening (what's being listening to, for what, what to do)
		-initialize each subViewModel using passing {model:service} as param
		-add render of each service

		-its Render calculates total and dynamically changes it in DOM
?What are the differences so far?
	-way The wrapper is executed
	-use of bind All

?What's happening in first Hello World example?
	-new listView instantiates a instance of ListView a View
	-on instantiation it runs initialize which calls render
	-render uses the el property of the listview where the view is attached to the DOM

?What's happening in the 2nd click add item example?
	-we've introduced an event handler using the 'events property'
	-on 'click (of) button#add' run addItem
	-addItem simply adds some html

?What's happening in 3rd ex?
	-First of all, it's very unfulfilling for more work to result in the same product, lol!
	-Creating a model, Item with defaults 'hello' and 'world'
	-a collection which will hold Items
	-Still not getting the bind all and this completely
	-instantiate the collection in init
	-bind the collection to appendItem, Append gets notified when collection, add method is used
	-define appendItem which adds the html
?In the 4th ex?
	-creating a special ItemView view
	-called by append Item, rendering of item falls to this items render method
?In the 5th?
	-First, I have no idea what Backbone.sync is doing :-/
	-Completely within ItemView, adding 2 new click events
	-bound to its own new functions, swap & remove
	-2 bindings: click --> swap or remove
	-AND change/remove --> render or unrender
?Backbone book Working with Model?
	-reinforcing what we already know, using set and get method
	-also introduces the to JSON method
	-also intros validate and on change

?What the el?
	-either set tagName, id and className for a completely new el
	-or set el: "#footer" to find what element you want it to be
	-all $el is a a jquery obj of the el
	all $('.edit') is finding edit within the view and makining it a jquery obj

? on vs listenTo?
	-1st listens directly to event
	-listen to listens to events on something else, like subsribing